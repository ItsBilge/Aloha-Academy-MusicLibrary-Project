// <auto-generated />
using System;
using Aloha_MusicLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aloha_MusicLibrary.Migrations
{
    [DbContext(typeof(MusicStoreContext))]
    partial class MusicStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Artist", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Genre")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Artists");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Playlist", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Playlists");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.PlaylistSong", b =>
            {
                b.Property<int>("PlaylistId")
                    .HasColumnType("int");

                b.Property<int>("SongId")
                    .HasColumnType("int");

                b.Property<int>("Id")
                    .HasColumnType("int");

                b.HasKey("PlaylistId", "SongId");

                b.HasIndex("SongId");

                b.ToTable("PlaylistSongs");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Song", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("ArtistId")
                    .HasColumnType("int");

                b.Property<double>("Duration")
                    .HasColumnType("float");

                b.Property<int?>("ReleaseYear")
                    .HasColumnType("int");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("ArtistId");

                b.ToTable("Songs");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.PlaylistSong", b =>
            {
                b.HasOne("Aloha_MusicLibrary.Model.Playlist", "Playlist")
                    .WithMany("PlaylistSongs")
                    .HasForeignKey("PlaylistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Aloha_MusicLibrary.Model.Song", "Song")
                    .WithMany("PlaylistSongs")
                    .HasForeignKey("SongId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Playlist");

                b.Navigation("Song");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Song", b =>
            {
                b.HasOne("Aloha_MusicLibrary.Model.Artist", "Artist")
                    .WithMany("Songs")
                    .HasForeignKey("ArtistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Artist");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Artist", b =>
            {
                b.Navigation("Songs");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Playlist", b =>
            {
                b.Navigation("PlaylistSongs");
            });

            modelBuilder.Entity("Aloha_MusicLibrary.Model.Song", b =>
            {
                b.Navigation("PlaylistSongs");
            });
#pragma warning restore 612, 618
        }
    }
}
